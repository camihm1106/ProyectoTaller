import tkinter as tk

root = tk.Tk()
root.title("Taller")
root.geometry("1100x700")
root.config(bg="gray")

inicio = tk.Label(root, text="Bienvenido al TextToSpeech para Sesiones de Ã“rganos Colegiados")
inicio.place(x=200, y=5)
inicio.config(font=("Courier", 15), bg="gray")

inicio2 = tk.Label(root, text="Iniciaremos creando la agenda previa")
inicio2.place(x=350, y=30)
inicio2.config(font=("Courier", 12), bg="gray")


def nuevo_apartado(event):
    apart = tk.Entry(root, bg="#D3D3D3")
    apart.config(font=("Courier", 20))
    apart.place(x=500, y=70)
    apart.insert(0, "Ingrese el apartado")
    apart.bind("<Return>", agregar_punto)
    return(apart.get())
apart=nuevo_apartado

def nuevo_punto(event):
    apartado = tk.Button(root, text="Nuevo apartado", bg="blue", fg="white", command=lambda: nuevo_apartado (event))
    apartado.config(font=("Courier", 15))
    apartado.place(x=300, y=150)
    punto = tk.Button(root, text="Nuevo punto", bg="blue", fg="white", command=lambda: agregar_punto(event))
    punto.config(font=("Courier", 15))
    punto.place(x=600, y=150)
    final= tk.Button(root, text="Finalizar la agenda",  bg="blue", fg="white",  command=lambda: cambios_de_agenda(event))
    final.config(font=("Courier", 15))
    final.place(x=400, y=210)

def agregar_punto(event):
    punto = tk.Entry(root, bg="#D3D3D3")
    punto.config(font=("Courier", 20))
    punto.place(x=500, y=110)
    punto.insert(0, "Ingrese un punto a tratar")
    punto.bind("<Return>", nuevo_punto)
    return(punto.get())
punt=agregar_punto

def punto(event):
    pun = tk.Label(root, text="Puntos a tratar:", bg="#D3D3D3")
    pun.config(font=("Courier", 20))
    pun.place(x=200, y=110)
    root.after(1000, agregar_punto(event))

def agenda():
    agenda= {}
    apartados= set()

    ap = tk.Label(root, text="Apartado: ",bg="#D3D3D3" )
    ap.config(font=("Courier", 20))
    ap.place(x=200, y=70)

    apartado = tk.Entry(root, bg="#D3D3D3")
    apartado.config(font=("Courier", 20))
    apartado.place(x=500, y=70)
    apartado.insert(0, "Ingrese el apartado")

    apartado.bind("<Return>", punto)

    while True:
        try:
            apartado =apart
            if not apartado:
                break
            apartados.add(apartado)

            puntos = []
            cont = 1
            while True:
                punto = punt
                if not punto:
                    break
                puntos.append(punto)
                cont += 1
        except:
            pass

        agenda[apartado] = puntos
print(agenda(nuevo_apartado,nuevo_punto))   
print("Agenda:")
for apartado, puntos in agenda.items():
    print(f"{apartado}:")
    for i, punto in enumerate(puntos):
        print(f"  {i+1}. {punto}")

print(agenda())


def cambios_de_agenda(event):
    for widget in root.winfo_children():
        widget.destroy()

    tabla = tk.Treeview(root)
    

    final= tk.Button(root, text="Finalizar agenda",  bg="blue", fg="white",  command=lambda: participantes(event))
    final.config(font=("Courier", 15))
    final.place(x=400, y=210)
    
def participantes(event):
    for widget in root.winfo_children():
        widget.destroy()
    inicio2 = tk.Label(root, text="Lista de participantes")
    inicio2.place(x=400, y=30)
    inicio2.config(font=("Courier", 12), bg="gray")
    lista_nombres=[]
    nom = tk.Label(root, text="Nombre: ",bg="#D3D3D3" )
    nom.config(font=("Courier", 20))
    nom.place(x=200, y=70)
    
    nombre = tk.Entry(root, bg="#D3D3D3")
    nombre.config(font=("Courier", 20))
    nombre.place(x=500, y=70)
    nombre.insert(0, "Ingrese el nombre")

    lista_nombres.append(nombre.get())

    tabla = tk.Treeview(root)
    tabla.place(x=350, y=100)

    return (lista_nombres)

print(participantes)


root.mainloop()
